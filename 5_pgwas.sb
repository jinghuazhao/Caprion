#!/usr/bin/bash

##SBATCH --account CARDIO-SL0-CPU
##SBATCH --partition cardio
##SBATCH --qos=cardio
##SBATCH --export ALL

##SBATCH --job-name=_bgen
##SBATCH --array=1-22
##SBATCH --output=/rds/user/jhz22/hpc-work/work/_bgen_%A_%a.o
##SBATCH --error=/rds/user/jhz22/hpc-work/work/_bgen_%A_%a.e

##SBATCH --job-name=_fastGWA
##SBATCH --array=1-987
##SBATCH --output=/rds/user/jhz22/hpc-work/work/_pgwas_fastLR_%A_%a.o
##SBATCH --error=/rds/user/jhz22/hpc-work/work/_pgwas_fastLR_%A_%a.e

#SBATCH --account=PETERS-SL3-CPU
#SBATCH --partition=cclake
#SBATCH --mem=28800
#SBATCH --time=12:00:00
#SBATCH --array=1-987
#SBATCH --job-name=_qqmanhattan
#SBATCH --output=/rds/user/jhz22/hpc-work/work/_qqmanhattan_%A_%a.o
#SBATCH --error=/rds/user/jhz22/hpc-work/work/_qqmanhattan_%A_%a.e

export TMPDIR=${HPC_WORK}/work
export caprion=~/Caprion/pilot
export analysis=~/Caprion/analysis
export phenoname=$(awk 'NR==ENVIRON["SLURM_ARRAY_TASK_ID"]{print $1}' ${caprion}/work/caprion.varlist)
export interval=${HPC_WORK}/data/interval

function bgen()
{
  export chr=chr${SLURM_ARRAY_TASK_ID}
  plink2 --bgen ${interval}/${chr}.bgen ref-unknown --sample ${interval}/interval.sample --keep ${caprion}/work/caprion.id2 \
         --export bgen-1.2 bits=8 --dosage-erase-threshold 0.001 \
         --set-missing-var-ids @:#_\$r_\$a --new-id-max-allele-len 680 \
         --out ${caprion}/work/${chr}
  bgenix -g ${caprion}/work/${chr}.bgen -index -clobber
}

function fastLR()
# fastGWA without --grm-sparse
{
  export phenocol=${SLURM_ARRAY_TASK_ID}
  export phenoname=$(awk 'NR==ENVIRON["phenocol"]{print $1}' ${caprion}/work/caprion.varlist)
  export batch=${1}
  gcta-1.9 --mbgen ${caprion}/work/caprion.bgenlist \
           --sample ${caprion}/work/caprion.sample \
           --keep ${caprion}/work/caprion-${batch}.id \
           --fastGWA-lr \
           --pheno ${caprion}/work/caprion-${batch}.pheno --mpheno ${phenocol} \
           --threads 10 \
           --out ${caprion}/work/caprion-${batch}-${phenoname}

  gcta-1.9 --mbgen ${caprion}/work/caprion.bgenlist \
           --sample ${caprion}/work/caprion.sample \
           --keep ${caprion}/work/chrX-${batch}.id \
           --fastGWA-lr --model-only \
           --pheno ${caprion}/work/caprion-${batch}.pheno --mpheno ${phenocol} \
           --threads 10 \
           --out ${caprion}/work/caprion-${batch}-${phenoname}

  gcta-1.9 --bgen ${caprion}/work/chrX.bgen \
           --sample ${caprion}/work/chrX.sample \
           --keep ${caprion}/work/chrX-${batch}.id \
           --load-model ${caprion}/work/caprion-${batch}-${phenoname}.fastGWA \
           --extract ${caprion}/work/chrX.snplist --geno 0.1 \
           --threads 10 \
           --out ${caprion}/work/caprion-${batch}-${phenoname}-chrX
  gzip -f ${caprion}/work/caprion-${batch}-${phenoname}*fastGWA
}

# export phenocol=$(grep -n -f ${caprion}/work/caprion.lrlist ${caprion}/work/caprion.varlist | \
#                   tr ':' '\t' | cut -f1 | awk 'NR==ENVIRON["SLURM_ARRAY_TASK_ID"]')

function qqmanhattan()
{
  cat <(echo chromosome position) \
      <(awk 'NR>1{print $1,$2}' ${analysis}/METAL/sentinels/${phenoname}.signals) \
      > ${analysis}/work/${phenoname}.annotate
  gunzip -c ${analysis}/METAL/${phenoname}-1.tbl.gz | \
  awk '{print $1,$2,10^$12}' > ${analysis}/work/${phenoname}.txt
  R --slave --vanilla --args \
      input_data_path=${analysis}/work/${phenoname}.txt \
      output_data_rootname=${analysis}/METAL/qqmanhattan/${phenoname}_turboqq \
      plot_title="${phenoname}" < ~/cambridge-ceu/turboqq/turboqq.r
  R --slave --vanilla --args \
      input_data_path=${analysis}/work/${phenoname}.txt \
      output_data_rootname=${analysis}/METAL/qqmanhattan/${phenoname}_turboman \
      custom_peak_annotation_file_path=${analysis}/work/${phenoname}.annotate \
      reference_file_path=~/cambridge-ceu/turboman/turboman_hg19_reference_data.rda \
      pvalue_sign=5.065856e-11 \
      plot_title="${phenoname}" < ~/cambridge-ceu/turboman/turboman.r
  rm ${analysis}/work/${phenoname}.txt
# R --no-save < utils/qqman.R
}

#bgen
#fastLR 1
#fastLR 2
#fastLR 3
qqmanhattan

# --- inactive code ---

function fastGWA()
# fastGWA mixed model
{
  gcta-1.9 --mbgen ${caprion}/work/caprion.bgenlist --grm-sparse ${caprion}/work/caprion-spgrm \
           --sample ${caprion}/work/caprion-chr1.sample \
           --fastGWA-mlm --pheno ${caprion}/work/caprion.pheno --mpheno ${SLURM_ARRAY_TASK_ID} --threads 10 \
           --out ${caprion}/work/caprion-${phenoname}

  gcta-1.9 --mbgen ${caprion}/work/caprion.bgenlist --grm-sparse ${caprion}/work/caprion-spgrm \
           --sample ${caprion}/work/caprion.sample \
           --fastGWA-mlm --model-only --pheno ${caprion}/work/caprion.pheno --mpheno ${SLURM_ARRAY_TASK_ID} \
           --keep ${caprion}/work/caprion-chrX.idlist --threads 10 \
           --out ${caprion}/work/caprion-${phenoname}

  gcta-1.9 --bgen ${caprion}/work/caprion-chrX.bgen \
           --sample ${caprion}/work/caprion.sample \
           --load-model ${caprion}/work/caprion-${phenoname}.fastGWA \
           --extract ${caprion}/work/caprion-chrX.snplist --geno 0.1 --threads 10 \
           --out ${caprion}/work/caprion-${phenoname}-chrX
  gzip -f ${caprion}/work/caprion-${phenoname}*fastGWA
}
