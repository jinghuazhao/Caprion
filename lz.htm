<!DOCTYPE html>
<html>
<head>
  <meta http-equiv="content-type" content="text/html; charset=UTF-8">
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/locuszoom@0.14.0/dist/locuszoom.css" type="text/css" crossorigin="anonymous"/>
  <script src="https://cdn.jsdelivr.net/npm/d3@5.16.0/dist/d3.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/locuszoom@0.14.0/dist/locuszoom.app.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/locuszoom@0.14.0/dist/ext/lz-dynamic-urls.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/locuszoom@0.14.0/dist/ext/lz-tabix-source.min.js"></script>
  <title>LocusZoom.js</title>
  <style>
    body {
      background-color: #FAFAFA;
      margin: 0px 20px;
    }
    img {
      max-width: 100%;
      box-sizing: border-box;
    }
    div.example > a > h6 {
      margin-bottom: 0.5em;
    }
    div.example > a > img {
      border: 1px solid #8A8A8A;
      margin-bottom: 1.4em;
    }
  </style>
</head>
<body>
  <script>
    function myFunction() {
      alert("Click the protein-pQTL hyperlink.");
    }
  </script>
  <button onclick="myFunction()">Default graph shown. Click gene to refresh</button>
  <div class="container">
    <div class="row">
      <div class="three columns">
        <h4>Protein-pQTLs</h4>
        <ul class="top_hits" style="padding-left: 0.2rem; min-width: 110px;"></ul>
      </div>
      <div class="ten columns">
        <div id="lz-plot" class="lz-container-responsive"></div>
      </div>
    </div>
  </div>
  <script src="caprion_dr.js"></script>
  <script type="text/javascript">
  var apiBase, data_sources
  apiBase = "https://portaldev.sph.umich.edu/api/v1/";
  const AssociationLZ = LocusZoom.Adapters.get('AssociationLZ');
  data_sources = new LocusZoom.DataSources()
  .add("assoc", ["StaticJSON", { data: input[0].data } ])
  .add("ld", ["LDServer", { url: "https://portaldev.sph.umich.edu/ld/", source: '1000G', build: 'GRCh37', population: 'ALL' }])
  .add("gene", ["GeneLZ", { url: apiBase + "annotation/genes/", build: 'GRCh37' }])
  .add("recomb", ["RecombLZ", { url: apiBase + "annotation/recomb/results/", build: 'GRCh37' }])
  .add("constraint", ["GeneConstraintLZ", { url: "https://gnomad.broadinstitute.org/api/", build: 'GRCh37' }]);
  var stateUrlMapping = {chr: "chrom", start: "start", end: "end", ldrefvar: 'ld_variant' };
  var initialState = LzDynamicUrls.paramsFromUrl(stateUrlMapping);
  if (!Object.keys(initialState).length) {
    initialState = {chr: '10', start: 114550452, end: 115067678};
  }
  layout = LocusZoom.Layouts.get("plot", "standard_association", {state: initialState});
  var plot = LocusZoom.populate("#lz-plot", data_sources, layout);
  LzDynamicUrls.plotUpdatesUrl(plot, stateUrlMapping);
  LzDynamicUrls.plotUpdatesUrl(plot, stateUrlMapping);
  function jumpTo(region) {
    var target = region.split(":");
    var chr = target[0];
    var pos = target[1];
    var no = target[2]
    var start = 0;
    var end = 0;
    if (!pos.match(/[-+]/)) {
      start = +pos - 250000;
      end = +pos + 250000
    }
    var new_data_sources = new LocusZoom.DataSources()
    .add("assoc", ["StaticJSON", { data: input[no].data } ])
    .add("ld", ["LDServer", { url: "https://portaldev.sph.umich.edu/ld/", source: '1000G', build: 'GRCh37', population: 'ALL' }])
    .add("gene", ["GeneLZ", { url: apiBase + "annotation/genes/", build: 'GRCh37' }])
    .add("recomb", ["RecombLZ", { url: apiBase + "annotation/recomb/results/", build: 'GRCh37' }])
    .add("constraint", ["GeneConstraintLZ", { url: "https://gnomad.broadinstitute.org/api/", build: 'GRCh37' }]);
    var new_stateUrlMapping = {chr: "chrom", start: "start", end: "end", ldrefvar: 'ld_variant' };
    var new_initialState = LzDynamicUrls.paramsFromUrl(new_stateUrlMapping);
    if (!Object.keys(new_initialState).length) {
      new_initialState = {chr: chr, start: start, end: end};
    }
    var new_layout = LocusZoom.Layouts.get("plot", "standard_association", {state: new_initialState});
    plot = LocusZoom.populate("#lz-plot", new_data_sources, new_layout);
    LzDynamicUrls.plotUpdatesUrl(plot, new_stateUrlMapping);
    plot.applyState({ chr: chr, start: start, end: end, ldrefvar: "" });
    return false;
  }
  var top_hits = [
    ["A1BG", "rs145685027", "19:58948122:0"],
    ["ACE", "rs4353", "17:61570422:1"]
  ];
  top_hits.forEach(function (hit) {
    d3.select("ul.top_hits").append("li")
      .html("<a href=\"javascript:void(0);\" onclick=\"javascript:jumpTo('" + hit[2] + "');\">" + hit[0] + "-" + hit[1] + "</a>");
  });
</script>
</body>
</html>
