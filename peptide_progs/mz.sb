#!/bin/bash

#SBATCH --job-name=_mz
#SBATCH --account=PETERS-SL3-CPU
#SBATCH --partition=icelake-himem
#SBATCH --mem=28800
#SBATCH --time=12:00:00
#SBATCH --cpus-per-task=4
##SBATCH --output=/rds/project/rds-zuZwCZMsS0w/Caprion_proteomics/analysis/work/mz.o
##SBATCH --error=/rds/project/rds-zuZwCZMsS0w/Caprion_proteomics/analysis/work/mz.e

# ZWK,ZYQ,UDP,UHZ=97,1544,836,1358
#SBATCH --array=1-1358
#SBATCH --output=/rds/project/rds-zuZwCZMsS0w/Caprion_proteomics/analysis/UHZ/work/raw-%A-%a.o
#SBATCH --error=/rds/project/rds-zuZwCZMsS0w/Caprion_proteomics/analysis/UHZ/work/raw-%A-%a.e

. /etc/profile.d/modules.sh
module purge
module load rhel8/default-icl

export TMPDIR=${HPC_WORK}/work

function raw_ThermoRawFileParser_array()
{
  module load ceuadmin/ThermoRawFileParser/1.4.4
  export batch=${1}
  export src=~/Caprion/analysis/${batch}
  if [ ! -f ${src}/${batch}.lst ]; then
    ls -d ${src}/raw ${src}/raw/* | sed '1d;s/\.raw//' > ${src}/${batch}.lst
  fi
  cd /usr/local/Cluster-Apps/ceuadmin/ThermoRawFileParser/1.4.4
  export f=$(awk 'NR==ENVIRON["SLURM_ARRAY_TASK_ID"]' ${src}/${batch}.lst)
  if [ ! -f ${src}/mzML/${f}.mzML ]; then
     mono ThermoRawFileParser.exe -i=${f}.raw -o ${src}/mzML
  fi
  cd -
}

function raw_ThermoRawFileParser()
{
  module load ceuadmin/ThermoRawFileParser/1.4.4
  export batch=${1}
  cd /usr/local/Cluster-Apps/ceuadmin/ThermoRawFileParser/1.4.4
  mono ThermoRawFileParser.exe -d ~/Caprion/analysis/${batch}/raw -o ~/Caprion/analysis/${batch}/mzML
  cd -
}

function run_metamorpheus()
{
  module load ceuadmin/MetaMorpheus/1.0.5
  module load ceuadmin/R
  export batch=${1}
  cd ~/Caprion/analysis/${batch}
  eval $metamorpheus --test -o test
  export fasta=/usr/local/Cluster-Apps/ceuadmin/FragPipe/22.0/databases/UP000005640.fasta
  eval $metamorpheus -g -o metamorpheus
  eval $metamorpheus -d ${fasta} -s $(ls mzML/*mzML) -t metamorpheus/SearchTask.toml -o metamorpheus
  Rscript -e '
    library(mzR)
    batch <- Sys.getenv("batch")
    dir <- file.path("~/Caprion/analysis",batch)
    files <- list.files(file.path(dir,"metamorpheus/Task1SearchTask//Individual\ File\ Results"),
                        pattern="mzID",full.names=TRUE,recursive=TRUE)
    mzid <- openIDfile(files[1])
    methods(class=class(mzid))
    psm <- psms(mzid)
    peptides <- read.delim(file.path(dir,"metamorpheus/Task1SearchTask/AllQuantifiedPeptides.tsv"))
    dplyr::filter(peptides,Gene.Names=="PROC")
  '
  cd -
}

function run_msamanda()
{
  module load ceuadmin/msamanda/3.0.21.532
  export batch=${1}
  export src=~/Caprion/analysis/${batch}
  export msamanda=/usr/local/Cluster-Apps/ceuadmin/msamanda/3.0.21.532
  export fragpipe=/usr/local/Cluster-Apps/ceuadmin/FragPipe/22.0
  cd ${msamanda}
  MSAmanda -s ${src}/mzML -e ${msamanda}/settings.xml  -o ${src}/msamanda -d ${fragpipe}/databases/UP000005640.fasta
  cd -
}

function read_msamanda()
# MSAmanda -f 2
{
  export batch=${1}
  export src=~/Caprion/analysis/${batch}
  Rscript -e '
    library(mzR)
    src <- Sys.getenv("src")
    files <- dir(file.path(src,"msamanda"),pattern="mzid",full.names=TRUE)
    mzid_files <- lapply(files, function(x) {mzR::openIDfile(x)})
    msamanda_settings <- xml2::read_xml(file.path(src,,"msamanda","msamanda_settings.xml"))
    mzid_files$msamanda_settings <- msamanda_settings
    save(mzid_files, "msamanda.rda")
  '
}

# mzML generation and MetaMorpheus/MSAmanda search
{
for batch in UHZ
do
  echo ${batch} processing ...
  raw_ThermoRawFileParser_array ${batch}
# run_metamorpheus ${batch}
# run_msamanda ${batch}
done
}
